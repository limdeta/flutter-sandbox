import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:get_it/get_it.dart';
import '../../features/tracking/domain/services/location_tracking_service.dart';
import '../../features/tracking/domain/repositories/iuser_track_repository.dart';
import '../../features/tracking/domain/entities/user_track.dart';
import '../../features/authentication/domain/usecases/get_current_session_usecase.dart';

/// –ú–µ–Ω–µ–¥–∂–µ—Ä –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è GPS —Ç—Ä–µ–∫–∏–Ω–≥–∞
/// 
/// –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç:
/// - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞ –ø—Ä–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
/// - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞ –ø—Ä–∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏
/// - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∞—Ä—Ç —Ç—Ä–µ–∫–∏–Ω–≥–∞ –≤ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
/// - –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class AppLifecycleManager with WidgetsBindingObserver {
  static const String _tag = 'AppLifecycle';
  
  final LocationTrackingService _trackingService;
  final IUserTrackRepository _trackRepository;
  final GetCurrentSessionUseCase _sessionUsecase;
  
  bool _isInitialized = false;
  bool _wasTrackingBeforePause = false;

  AppLifecycleManager({
    LocationTrackingService? trackingService,
    IUserTrackRepository? trackRepository,
    GetCurrentSessionUseCase? sessionUsecase,
  }) : _trackingService = trackingService ?? GetIt.instance<LocationTrackingService>(),
       _trackRepository = trackRepository ?? GetIt.instance<IUserTrackRepository>(),
       _sessionUsecase = sessionUsecase ?? GetIt.instance<GetCurrentSessionUseCase>();

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
  Future<void> initialize() async {
    if (_isInitialized) return;
    
    WidgetsBinding.instance.addObserver(this);
    await _restoreActiveTrackingIfNeeded();
    _isInitialized = true;
    
    _log('–ú–µ–Ω–µ–¥–∂–µ—Ä –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /// –û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã
  void dispose() {
    if (_isInitialized) {
      WidgetsBinding.instance.removeObserver(this);
      _isInitialized = false;
      _log('–ú–µ–Ω–µ–¥–∂–µ—Ä –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω');
    }
  }

  @override
  void didChangeAppLifecycleState(AppLifecycleState state) {
    super.didChangeAppLifecycleState(state);
    
    switch (state) {
      case AppLifecycleState.resumed:
        _onAppResumed();
        break;
      case AppLifecycleState.paused:
        _onAppPaused();
        break;
      case AppLifecycleState.detached:
        _onAppDetached();
        break;
      case AppLifecycleState.inactive:
        // –ù–µ –¥–µ–ª–∞–µ–º –Ω–∏—á–µ–≥–æ - —ç—Ç–æ –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        break;
      case AppLifecycleState.hidden:
        // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ
        _log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ, —Ç—Ä–µ–∫–∏–Ω–≥ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –≤ —Ñ–æ–Ω–µ');
        break;
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  Future<void> _onAppResumed() async {
    _log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç—Ä–µ–∫–∏–Ω–≥ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω
    if (_wasTrackingBeforePause && !_trackingService.isTracking) {
      await _restoreActiveTrackingIfNeeded();
    }
    
    _wasTrackingBeforePause = false;
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  Future<void> _onAppPaused() async {
    _log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–≤–µ—Ä–Ω—É—Ç–æ');
    
    _wasTrackingBeforePause = _trackingService.isTracking;
    
    if (_trackingService.isTracking) {
      _log('–¢—Ä–µ–∫–∏–Ω–≥ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ');
      // LocationTrackingService —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
      // —á–µ—Ä–µ–∑ foregroundNotificationConfig –¥–ª—è Android
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  Future<void> _onAppDetached() async {
    _log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è');
    
    if (_trackingService.isTracking) {
      _log('–ó–∞–≤–µ—Ä—à–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ç—Ä–µ–∫ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
      await _trackingService.stopTracking();
    }
  }

  /// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π —Ç—Ä–µ–∫–∏–Ω–≥ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  Future<void> _restoreActiveTrackingIfNeeded() async {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      final sessionResult = await _sessionUsecase.call();
      if (sessionResult.isLeft()) {
        _log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é');
        return;
      }

      final session = sessionResult.fold((l) => null, (r) => r);
      if (session?.user == null) {
        _log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
      }

      // –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ç—Ä–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ externalId
      // TODO: –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π userId –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      _log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ${session!.user.externalId}');
      // –ü–æ–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞ - –Ω—É–∂–Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
      
      /*
      final activeTrack = await _trackRepository.getActiveTrackByUserId(userId);
      if (activeTrack == null) {
        _log('–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        return;
      }

      _log('–ù–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —Ç—Ä–µ–∫, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç—Ä–µ–∫–∏–Ω–≥');
      
      final success = await _trackingService.startTracking(
        userId: userId,
        routeId: activeTrack.routeId,
      );
      
      if (success) {
        _log('–¢—Ä–µ–∫–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      } else {
        _log('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–∫–∏–Ω–≥');
      }
      */
      
    } catch (e) {
      _log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç—Ä–µ–∫–∏–Ω–≥–∞: $e');
    }
  }

  /// –ù–∞—á–∏–Ω–∞–µ—Ç —Ç—Ä–µ–∫–∏–Ω–≥ –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
  Future<bool> startWorkDayTracking({
    required int userId,
    int? routeId,
  }) async {
    if (_trackingService.isTracking) {
      _log('–¢—Ä–µ–∫–∏–Ω–≥ —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω');
      return true;
    }

    try {
      final success = await _trackingService.startTracking(
        userId: userId,
        routeId: routeId,
        metadata: {
          'autoStarted': true,
          'startedAt': DateTime.now().toIso8601String(),
        },
      );

      if (success) {
        _log('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç—Ä–µ–∫–∏–Ω–≥ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –Ω–∞—á–∞—Ç');
      } else {
        _log('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç—Ä–µ–∫–∏–Ω–≥');
      }

      return success;
    } catch (e) {
      _log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç—Ä–µ–∫–∏–Ω–≥–∞: $e');
      return false;
    }
  }

  /// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç—Ä–µ–∫–∏–Ω–≥ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
  Future<bool> stopWorkDayTracking() async {
    if (!_trackingService.isTracking) {
      _log('–¢—Ä–µ–∫–∏–Ω–≥ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω');
      return true;
    }

    try {
      await _trackingService.stopTracking();
      _log('–¢—Ä–µ–∫–∏–Ω–≥ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω');
      return true;
    } catch (e) {
      _log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Ç—Ä–µ–∫–∏–Ω–≥–∞: $e');
      return false;
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω—É–∂–Ω–æ –ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–∫–∏–Ω–≥
  Future<bool> shouldAutoStartTracking() async {
    try {
      final sessionResult = await _sessionUsecase.call();
      if (sessionResult.isLeft()) return false;

      final session = sessionResult.fold((l) => null, (r) => r);
      if (session?.user == null) return false;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –º–∞—Ä—à—Ä—É—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
      // TODO: –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
      final now = DateTime.now();
      final isWorkingHours = now.hour >= 8 && now.hour <= 18;
      
      return isWorkingHours && !_trackingService.isTracking;
    } catch (e) {
      _log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞: $e');
      return false;
    }
  }

  /// –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ç—Ä–µ–∫–∏–Ω–≥–∞
  bool get isTracking => _trackingService.isTracking;

  /// –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–∫
  UserTrack? get currentTrack => _trackingService.currentTrack;

  void _log(String message) {
    if (kDebugMode) {
      print('üîÑ [$_tag] $message');
    }
  }
}
