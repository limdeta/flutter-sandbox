import 'package:latlong2/latlong.dart';
import 'package:get_it/get_it.dart';
import 'package:tauzero/features/authentication/domain/entities/user.dart';

import '../../domain/entities/route.dart';
import '../../domain/entities/regular_point_of_interest.dart';
import '../../domain/entities/trading_point_of_interest.dart';
import '../../domain/entities/trading_point.dart';
import '../../domain/entities/ipoint_of_interest.dart';
import '../../domain/repositories/iroute_repository.dart';


/// –°–µ—Ä–≤–∏—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è dev —Ñ–∏–∫—Å—Ç—É—Ä –º–∞—Ä—à—Ä—É—Ç–æ–≤
/// 
/// –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π:
/// - –í—á–µ—Ä–∞—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç (–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π)
/// - –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç (–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
/// - –ó–∞–≤—Ç—Ä–∞—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç (–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
/// 
/// –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ use cases —Å–∏—Å—Ç–µ–º—ã –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
class RouteFixtureService {
  final IRouteRepository _repository;
  
  RouteFixtureService(this._repository);
  
  /// –°–æ–∑–¥–∞–µ—Ç –≤—Å–µ dev —Ñ–∏–∫—Å—Ç—É—Ä—ã –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
  Future<void> createDevFixtures(User user) async {
    print('üîß –°–æ–∑–¥–∞–µ–º dev —Ñ–∏–∫—Å—Ç—É—Ä—ã –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è ${user.fullName}');
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ—Å—Ç—å
    await _clearUserData(user);
    
    // –°–æ–∑–¥–∞–µ–º –≤—á–µ—Ä–∞—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç (–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π)
    final yesterdayRoute = _createYesterdayRoute(user);
    await _repository.createRoute(yesterdayRoute, user);
    print('‚úÖ –í—á–µ—Ä–∞—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç —Å–æ–∑–¥–∞–Ω: ${yesterdayRoute.name}');
    
    // –°–æ–∑–¥–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç (–≤ —Ä–∞–±–æ—Ç–µ)
    final todayRoute = _createTodayRoute(user);
    await _repository.createRoute(todayRoute, user);
    print('‚úÖ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç —Å–æ–∑–¥–∞–Ω: ${todayRoute.name}');
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç (–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
    final tomorrowRoute = _createTomorrowRoute(user);
    await _repository.createRoute(tomorrowRoute, user);
    print('‚úÖ –ó–∞–≤—Ç—Ä–∞—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç —Å–æ–∑–¥–∞–Ω: ${tomorrowRoute.name}');
    
    print('üéâ Dev —Ñ–∏–∫—Å—Ç—É—Ä—ã –¥–ª—è ${user.fullName} –≥–æ—Ç–æ–≤—ã!');
  }
  
  /// –°–æ–∑–¥–∞–µ—Ç –≤—á–µ—Ä–∞—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç (–ø–æ—á—Ç–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω)
  Route _createYesterdayRoute(User user) {
    final yesterday = DateTime.now().subtract(const Duration(days: 1));
    final startOfDay = DateTime(yesterday.year, yesterday.month, yesterday.day, 9, 0);
    
    return Route(
      name: '–ú–∞—Ä—à—Ä—É—Ç –æ—Ç ${_formatDate(yesterday)}',
      description: '–í—á–µ—Ä–∞—à–Ω–∏–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å - –ø–æ—á—Ç–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω',
      createdAt: startOfDay.subtract(const Duration(hours: 1)),
      startTime: startOfDay,
      endTime: startOfDay.add(const Duration(hours: 7, minutes: 45)), // –ó–∞–∫–æ–Ω—á–∏–ª —Ä–∞–Ω—å—à–µ
      status: RouteStatus.completed,
      pointsOfInterest: [
        // 1. –°–∫–ª–∞–¥ - –Ω–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ (–∑–∞–≤–µ—Ä—à–µ–Ω–∞)
        RegularPointOfInterest(
          name: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥',
          description: '–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –¥–µ–Ω—å',
          coordinates: const LatLng(43.1158, 131.8858), // –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫, —Ä–∞–π–æ–Ω —Å–∫–ª–∞–¥–∞
          type: PointType.warehouse,
          plannedArrivalTime: startOfDay,
          plannedDepartureTime: startOfDay.add(const Duration(minutes: 30)),
          actualArrivalTime: startOfDay.subtract(const Duration(minutes: 5)), // –ü—Ä–∏–µ—Ö–∞–ª —Ä–∞–Ω—å—à–µ
          actualDepartureTime: startOfDay.add(const Duration(minutes: 25)), // –£–µ—Ö–∞–ª —Ä–∞–Ω—å—à–µ
          status: VisitStatus.completed,
          notes: '–ó–∞–≥—Ä—É–∂–µ–Ω–æ: 15 –∫–æ—Ä–æ–±–æ–∫, –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã',
        ),
        
        // 2. –ü–µ—Ä–≤—ã–π –∫–ª–∏–µ–Ω—Ç - —Ç–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞ (–∑–∞–≤–µ—Ä—à–µ–Ω–∞)
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–û–∫–µ–∞–Ω"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_001',
            name: '–û–û–û "–û–∫–µ–∞–Ω"',
            inn: '2536789012',
          ),
          coordinates: const LatLng(43.1356, 131.9113), // –¶–µ–Ω—Ç—Ä –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–∞
          plannedArrivalTime: startOfDay.add(const Duration(hours: 1)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 1, minutes: 45)),
          actualArrivalTime: startOfDay.add(const Duration(hours: 1, minutes: 10)), // –û–ø–æ–∑–¥–∞–ª –Ω–∞ 10 –º–∏–Ω
          actualDepartureTime: startOfDay.add(const Duration(hours: 2)), // –ó–∞–¥–µ—Ä–∂–∞–ª—Å—è
          status: VisitStatus.completed,
          notes: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ 5 –∫–æ—Ä–æ–±–æ–∫. –ö–ª–∏–µ–Ω—Ç –¥–æ–≤–æ–ª–µ–Ω. –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é.',
        ),
        
        // 3. –í—Ç–æ—Ä–æ–π –∫–ª–∏–µ–Ω—Ç - —Ç–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞ (–∑–∞–≤–µ—Ä—à–µ–Ω–∞)
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_002',
            name: '–ò–ü –ò–≤–∞–Ω–æ–≤ –ê.–°. "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π"',
            inn: '253678901234',
          ),
          coordinates: const LatLng(43.1050, 131.8735), // –î—Ä—É–≥–æ–π —Ä–∞–π–æ–Ω
          plannedArrivalTime: startOfDay.add(const Duration(hours: 2, minutes: 30)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 3, minutes: 15)),
          actualArrivalTime: startOfDay.add(const Duration(hours: 2, minutes: 45)),
          actualDepartureTime: startOfDay.add(const Duration(hours: 3, minutes: 30)),
          status: VisitStatus.completed,
          notes: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ 3 –∫–æ—Ä–æ–±–∫–∏. –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏.',
        ),
        
        // 4. –¢—Ä–µ—Ç–∏–π –∫–ª–∏–µ–Ω—Ç - —Ç–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞ (–∑–∞–≤–µ—Ä—à–µ–Ω–∞)
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–î–∞–ª—å–Ω–∏–π"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_003',
            name: '–û–û–û "–î–∞–ª—å–Ω–∏–π –í–æ—Å—Ç–æ–∫ –¢—Ä–µ–π–¥"',
            inn: '2536789034',
          ),
          coordinates: const LatLng(43.0721, 131.9042), // –û—Ç–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–∞–π–æ–Ω
          plannedArrivalTime: startOfDay.add(const Duration(hours: 4)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 4, minutes: 45)),
          actualArrivalTime: startOfDay.add(const Duration(hours: 4, minutes: 15)),
          actualDepartureTime: startOfDay.add(const Duration(hours: 5)),
          status: VisitStatus.completed,
          notes: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ 4 –∫–æ—Ä–æ–±–∫–∏. –û–±—Å—É–¥–∏–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞.',
        ),
        
        // 5. –û–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤ (–ø—Ä–æ–ø—É—â–µ–Ω - —Ä–∞–±–æ—Ç–∞–ª –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞)
        RegularPointOfInterest(
          name: '–û–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤',
          description: '–ö–∞—Ñ–µ "–£ –º–æ—Ä—è"',
          coordinates: const LatLng(43.1183, 131.8850),
          type: PointType.break_,
          plannedArrivalTime: startOfDay.add(const Duration(hours: 5, minutes: 30)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 6, minutes: 30)),
          status: VisitStatus.skipped, // –ü—Ä–æ–ø—É—Å—Ç–∏–ª –æ–±–µ–¥
          notes: '–ü—Ä–æ–ø—É—â–µ–Ω - —Ä–∞–±–æ—Ç–∞–ª –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞, —á—Ç–æ–±—ã —É—Å–ø–µ—Ç—å –±–æ–ª—å—à–µ –∫–ª–∏–µ–Ω—Ç–æ–≤',
        ),
        
        // 6. –ß–µ—Ç–≤–µ—Ä—Ç—ã–π –∫–ª–∏–µ–Ω—Ç - —Ç–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞ (–∑–∞–≤–µ—Ä—à–µ–Ω–∞)
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–ó–æ–ª–æ—Ç–æ–π –†–æ–≥"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_004',
            name: '–û–û–û "–ó–æ–ª–æ—Ç–æ–π –†–æ–≥"',
            inn: '2536789045',
          ),
          coordinates: const LatLng(43.1067, 131.8730),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 7)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 7, minutes: 45)),
          actualArrivalTime: startOfDay.add(const Duration(hours: 6, minutes: 45)), // –ü—Ä–∏–µ—Ö–∞–ª —Ä–∞–Ω—å—à–µ
          actualDepartureTime: startOfDay.add(const Duration(hours: 7, minutes: 30)),
          status: VisitStatus.completed,
          notes: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ 3 –∫–æ—Ä–æ–±–∫–∏. –í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!',
        ),
        
        // 7. –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–ª–∏–µ–Ω—Ç (–ù–ï –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –Ω–µ —É—Å–ø–µ–ª)
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–ö–æ–Ω–µ—á–Ω–∞—è"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_005',
            name: '–ò–ü –ü–µ—Ç—Ä–æ–≤ "–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞"',
            inn: '2536789056',
          ),
          coordinates: const LatLng(43.0856, 131.9156),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 8, minutes: 15)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 9)),
          status: VisitStatus.planned, // –ù–ï –£–°–ü–ï–õ!
          notes: '–ù–µ —É—Å–ø–µ–ª –¥–æ–µ—Ö–∞—Ç—å - –∑–∞–∫–æ–Ω—á–∏–ª—Å—è —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å',
        ),
      ],
    );
  }
  
  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç (–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
  Route _createTodayRoute(User user) {
    final today = DateTime.now();
    final startOfDay = DateTime(today.year, today.month, today.day, 9, 0);
    final currentTime = DateTime.now();
    
    return Route(
      name: '–¢–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç ${_formatDate(today)}',
      description: '–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å - –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è',
      createdAt: startOfDay.subtract(const Duration(hours: 12)),
      startTime: startOfDay,
      status: RouteStatus.active,
      pointsOfInterest: [
        RegularPointOfInterest(
          name: '–°—Ç–∞—Ä—Ç',
          description: '–ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞',
          coordinates: const LatLng(43.1438, 131.9268),
          type: PointType.warehouse,
          plannedArrivalTime: startOfDay,
          plannedDepartureTime: startOfDay.add(const Duration(minutes: 30)),
          actualArrivalTime: startOfDay.add(const Duration(minutes: 5)),
          actualDepartureTime: startOfDay.add(const Duration(minutes: 35)),
          status: VisitStatus.completed,
          notes: '–ó–∞–≥—Ä—É–∂–µ–Ω–æ: 18 –∫–æ—Ä–æ–±–æ–∫, –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –ø–æ—Ä—è–¥–∫–µ',
          order: 0,
        ),
        TradingPointOfInterest(
          name: '–ü–µ—Ä–≤–∞—è —Ç–æ—á–∫–∞',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_101',
            name: '–û–û–û "–ü–µ—Ä–≤–∞—è —Ç–æ—á–∫–∞"',
            inn: '2536789101',
          ),
          coordinates: const LatLng(43.1332, 131.9118),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 1)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 1, minutes: 45)),
          actualArrivalTime: startOfDay.add(const Duration(hours: 1, minutes: 10)),
          actualDepartureTime: startOfDay.add(const Duration(hours: 1, minutes: 50)),
          status: VisitStatus.completed,
          notes: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ 6 –∫–æ—Ä–æ–±–æ–∫. –ö–ª–∏–µ–Ω—Ç –∑–∞–∫–∞–∑–∞–ª –µ—â–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é.',
          order: 1,
        ),
        TradingPointOfInterest(
          name: '–í—Ç–æ—Ä–∞—è —Ç–æ—á–∫–∞',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_102',
            name: '–ò–ü –°–∏–¥–æ—Ä–æ–≤ "–í—Ç–æ—Ä–∞—è —Ç–æ—á–∫–∞"',
            inn: '253678910234',
          ),
          coordinates: const LatLng(43.1372, 131.9501),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 2, minutes: 30)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 3, minutes: 15)),
          actualArrivalTime: startOfDay.add(const Duration(hours: 2, minutes: 35)),
          actualDepartureTime: startOfDay.add(const Duration(hours: 3, minutes: 20)),
          status: VisitStatus.completed,
          notes: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ 4 –∫–æ—Ä–æ–±–∫–∏. –û–ø–ª–∞—Ç–∞ –ø–æ –±–µ–∑–Ω–∞–ª—É.',
          order: 2,
        ),
        TradingPointOfInterest(
          name: '–¢—Ä–µ—Ç—å—è —Ç–æ—á–∫–∞',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_103',
            name: '–û–û–û "–¢—Ä–µ—Ç—å—è —Ç–æ—á–∫–∞"',
            inn: '2536789103',
          ),
          coordinates: const LatLng(43.1081, 131.9399),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 4)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 4, minutes: 45)),
          actualArrivalTime: currentTime.isAfter(startOfDay.add(const Duration(hours: 4, minutes: 5)))
              ? startOfDay.add(const Duration(hours: 4, minutes: 5))
              : null,
          status: _getCurrentPointStatus(startOfDay.add(const Duration(hours: 4)), currentTime),
          notes: _getCurrentPointStatus(startOfDay.add(const Duration(hours: 4)), currentTime) == VisitStatus.completed
              ? '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ 5 –∫–æ—Ä–æ–±–æ–∫. –û–±—Å—É–¥–∏–ª–∏ –Ω–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏.'
              : null,
          order: 3,
        ),
        TradingPointOfInterest(
          name: '–ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Ç–æ—á–∫–∞',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_104',
            name: '–û–û–û "–ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Ç–æ—á–∫–∞"',
            inn: '2536789104',
          ),
          coordinates: const LatLng(43.0882, 131.9366),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 5, minutes: 30)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 6, minutes: 30)),
          status: VisitStatus.planned,
          order: 4,
        ),
        TradingPointOfInterest(
          name: '–ü—è—Ç–∞—è —Ç–æ—á–∫–∞',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_105',
            name: '–û–û–û "–ü—è—Ç–∞—è —Ç–æ—á–∫–∞"',
            inn: '2536789105',
          ),
          coordinates: const LatLng(43.0882, 131.9366),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 7)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 7, minutes: 45)),
          status: VisitStatus.planned,
          order: 5,
        ),
        TradingPointOfInterest(
          name: '–®–µ—Å—Ç–∞—è —Ç–æ—á–∫–∞',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_106',
            name: '–û–û–û "–®–µ—Å—Ç–∞—è —Ç–æ—á–∫–∞"',
            inn: '2536789106',
          ),
          coordinates: const LatLng(43.0757, 131.9591),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 8, minutes: 15)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 9)),
          status: VisitStatus.planned,
          order: 6,
        ),
      ],
    );
  }
  
  /// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π —Ç–æ—á–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏
  VisitStatus _getCurrentPointStatus(DateTime plannedTime, DateTime currentTime) {
    if (currentTime.isBefore(plannedTime.subtract(const Duration(minutes: 15)))) {
      return VisitStatus.planned;
    } else if (currentTime.isBefore(plannedTime.add(const Duration(minutes: 30)))) {
      return VisitStatus.enRoute;
    } else if (currentTime.isBefore(plannedTime.add(const Duration(hours: 1)))) {
      return VisitStatus.arrived;
    } else {
      return VisitStatus.completed;
    }
  }
  
  /// –°–æ–∑–¥–∞–µ—Ç –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç (–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
  Route _createTomorrowRoute(User user) {
    final tomorrow = DateTime.now().add(const Duration(days: 1));
    final startOfDay = DateTime(tomorrow.year, tomorrow.month, tomorrow.day, 9, 0);
    
    return Route(
      name: '–ü–ª–∞–Ω–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç ${_formatDate(tomorrow)}',
      description: '–ó–∞–≤—Ç—Ä–∞—à–Ω–∏–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å - –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω',
      createdAt: DateTime.now(), // –°–æ–∑–¥–∞–Ω —Å–µ–≥–æ–¥–Ω—è –¥–ª—è –∑–∞–≤—Ç—Ä–∞
      startTime: startOfDay,
      status: RouteStatus.planned,
      pointsOfInterest: [
        // 1. –°–∫–ª–∞–¥ - –Ω–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞
        RegularPointOfInterest(
          name: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥',
          description: '–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞',
          coordinates: const LatLng(43.1158, 131.8858),
          type: PointType.warehouse,
          plannedArrivalTime: startOfDay,
          plannedDepartureTime: startOfDay.add(const Duration(minutes: 30)),
          status: VisitStatus.planned,
        ),
        
        // 2. –ö—Ä—É–ø–Ω—ã–π –∫–ª–∏–µ–Ω—Ç - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –≤–∏–∑–∏—Ç
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_PRIORITY_001',
            name: '–û–û–û "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä"',
            inn: '2536789201',
          ),
          coordinates: const LatLng(43.1400, 131.9200), // VIP —Ä–∞–π–æ–Ω
          plannedArrivalTime: startOfDay.add(const Duration(hours: 1)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 2)),
          status: VisitStatus.planned,
          notes: '–í–∞–∂–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ - –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤',
        ),
        
        // 3. –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç - –ø–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–ù–æ–≤–∏—á–æ–∫"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_NEW_001',
            name: '–ò–ü –ù–æ–≤–∏–∫–æ–≤ "–ù–æ–≤–∞—è —Ç–æ—á–∫–∞"',
            inn: '253678920234',
          ),
          coordinates: const LatLng(43.1200, 131.8900),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 2, minutes: 30)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 3, minutes: 30)),
          status: VisitStatus.planned,
          notes: '–ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç - –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ, –∏–∑—É—á–µ–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π',
        ),
        
        // 4. –û–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤
        RegularPointOfInterest(
          name: '–û–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤',
          description: '–†–µ—Å—Ç–æ—Ä–∞–Ω "–ü–ª–∞–Ω—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞"',
          coordinates: const LatLng(43.1180, 131.8950),
          type: PointType.break_,
          plannedArrivalTime: startOfDay.add(const Duration(hours: 4)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 5)),
          status: VisitStatus.planned,
        ),
        
        // 5. –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –∫–ª–∏–µ–Ω—Ç - —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–ü—Ä–æ–±–ª–µ–º–Ω—ã–π"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_PROBLEM_001',
            name: '–û–û–û "–°–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"',
            inn: '2536789202',
          ),
          coordinates: const LatLng(43.0900, 131.8600),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 5, minutes: 30)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 6, minutes: 30)),
          status: VisitStatus.planned,
          notes: '–†–∞–∑–±–æ—Ä –ø—Ä–µ—Ç–µ–Ω–∑–∏–π –ø–æ –∫–∞—á–µ—Å—Ç–≤—É. –ù—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç.',
        ),
        
        // 6. –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç - –ø–ª–∞–Ω–æ–≤—ã–π –≤–∏–∑–∏—Ç
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_REGULAR_001',
            name: '–ò–ü –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤ "–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ"',
            inn: '253678920345',
          ),
          coordinates: const LatLng(43.1300, 131.9100),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 7)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 7, minutes: 45)),
          status: VisitStatus.planned,
          notes: '–†–µ–≥—É–ª—è—Ä–Ω—ã–π –∑–∞–∫–∞–∑ + –æ–±—Å—É–∂–¥–µ–Ω–∏–µ —Å–∫–∏–¥–æ–∫ –Ω–∞ –±–æ–ª—å—à–∏–µ –æ–±—ä–µ–º—ã',
        ),
        
        // 7. –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç - —Ä–∞–∑–≤–µ–¥–∫–∞
        TradingPointOfInterest(
          name: '–í–∏–∑–∏—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É "–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª"',
          tradingPoint: TradingPoint(
            externalId: 'CLIENT_POTENTIAL_001',
            name: '–û–û–û "–ë–æ–ª—å—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"',
            inn: '2536789203',
          ),
          coordinates: const LatLng(43.1100, 131.8800),
          plannedArrivalTime: startOfDay.add(const Duration(hours: 8, minutes: 15)),
          plannedDepartureTime: startOfDay.add(const Duration(hours: 9)),
          status: VisitStatus.planned,
          notes: '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∫—Ä—É–ø–Ω—ã–π –∫–ª–∏–µ–Ω—Ç. –ò–∑—É—á–∏—Ç—å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –±—é–¥–∂–µ—Ç.',
        ),
      ],
    );
  }

  /// –û—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è dev —Å—Ä–µ–¥—ã)
  Future<void> _clearUserData(User user) async {
    try {
      final routes = await _repository.watchUserRoutes(user).first;
      for (final route in routes) {
        await _repository.deleteRoute(route);
      }
      print('üßπ –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—á–∏—â–µ–Ω—ã');
    } catch (e) {
      print('‚ÑπÔ∏è –ù–µ—Ç —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—á–∏—Å—Ç–∫–∏: $e');
    }
  }
  
  /// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  String _formatDate(DateTime date) {
    final months = [
      '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
      '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
    ];
    return '${date.day} ${months[date.month - 1]}';
  }
}

/// Factory –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è FixtureService
class RouteFixtureServiceFactory {
  static RouteFixtureService create() {
    final repository = GetIt.instance<IRouteRepository>();
    return RouteFixtureService(repository);
  }
}
