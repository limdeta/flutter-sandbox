import 'package:flutter/material.dart';
import 'package:tauzero/app/providers/dev_data_loading_notifier.dart';

/// –í–∏–¥–∂–µ—Ç-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ dev –¥–∞–Ω–Ω—ã—Ö
/// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–≤–µ—Ä—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ dev —Ä–µ–∂–∏–º–µ
class DevDataLoadingOverlay extends StatelessWidget {
  final Widget child;

  const DevDataLoadingOverlay({
    super.key,
    required this.child,
  });

  @override
  Widget build(BuildContext context) {
    return ValueListenableBuilder<DevDataLoadingState>(
      valueListenable: devDataLoadingNotifier,
      builder: (context, state, _) {
        return Directionality(
          textDirection: TextDirection.ltr,
          child: Stack(
            children: [
              child,
              if (state == DevDataLoadingState.loading)
                _buildLoadingOverlay(context),
              if (state == DevDataLoadingState.error)
                _buildErrorOverlay(context),
            ],
          ),
        );
      },
    );
  }

  /// –°—Ç—Ä–æ–∏—Ç –æ–≤–µ—Ä–ª–µ–π —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –∑–∞–≥—Ä—É–∑–∫–∏
  Widget _buildLoadingOverlay(BuildContext context) {
    return Directionality(
      textDirection: TextDirection.ltr,
      child: Container(
        color: Colors.black.withOpacity(0.7),
        child: const Center(
          child: Card(
            child: Padding(
              padding: EdgeInsets.all(24.0),
              child: Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  CircularProgressIndicator(),
                  SizedBox(height: 16),
                  Text(
                    'üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è dev –¥–∞–Ω–Ω—ã—Ö...',
                    style: TextStyle(
                      fontSize: 16,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                  SizedBox(height: 8),
                  Text(
                    '–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫',
                    style: TextStyle(
                      fontSize: 14,
                      color: Colors.grey,
                    ),
                    textAlign: TextAlign.center,
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }

  /// –°—Ç—Ä–æ–∏—Ç –æ–≤–µ—Ä–ª–µ–π —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
  Widget _buildErrorOverlay(BuildContext context) {
    return Directionality(
      textDirection: TextDirection.ltr,
      child: Container(
        color: Colors.black.withOpacity(0.7),
        child: Center(
          child: Card(
            child: Padding(
              padding: const EdgeInsets.all(24.0),
              child: Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  const Icon(
                    Icons.error_outline,
                    color: Colors.red,
                    size: 48,
                  ),
                  const SizedBox(height: 16),
                  const Text(
                    '‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ dev –¥–∞–Ω–Ω—ã—Ö',
                    style: TextStyle(
                      fontSize: 16,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                  const SizedBox(height: 8),
                  Text(
                    devDataLoadingNotifier.errorMessage ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
                    style: const TextStyle(
                      fontSize: 14,
                      color: Colors.grey,
                    ),
                    textAlign: TextAlign.center,
                  ),
                  const SizedBox(height: 16),
                  ElevatedButton(
                    onPressed: () {
                      devDataLoadingNotifier.reset();
                    },
                    child: const Text('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }
}
