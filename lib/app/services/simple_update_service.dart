import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:upgrader/upgrader.dart';
import 'package:url_launcher/url_launcher.dart';
import '../config/app_config.dart';

/// –ü—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É—è –±–∏–±–ª–∏–æ—Ç–µ–∫—É upgrader
/// –ù–æ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–≤–∞—à —Å–µ—Ä–≤–µ—Ä)
class SimpleUpdateService {
  static const String UPDATE_URL = 'https://your-server.com/tauzero/version.json';
  static const String CURRENT_VERSION = '1.0.0'; // –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è
  
  /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ –≤ –∫–æ–Ω—Ñ–∏–≥–µ
  static Future<void> checkForUpdatesIfEnabled(BuildContext context) async {
    if (!AppConfig.checkForUpdates) {
      print('ÔøΩ [Updates] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
      return;
    }
    
    print('üîÑ [Updates] –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
    await _checkForUpdates(context);
  }
  
  /// –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  static Future<void> _checkForUpdates(BuildContext context) async {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ "–ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (context) => const AlertDialog(
        title: Text('–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π'),
        content: Row(
          mainAxisSize: MainAxisSize.min,
          children: [
            CircularProgressIndicator(),
            SizedBox(width: 20),
            Text('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...'),
          ],
        ),
      ),
    );
    
    try {
      final updateInfo = await _fetchUpdateInfo();
      Navigator.pop(context); // –ó–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –∑–∞–≥—Ä—É–∑–∫–∏
      
      if (updateInfo != null) {
        _showUpdateDialog(context, updateInfo);
      } else {
        _showNoUpdatesDialog(context);
      }
    } catch (e) {
      Navigator.pop(context); // –ó–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      _showErrorDialog(context, e.toString());
    }
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
  static Future<Map<String, dynamic>?> _fetchUpdateInfo() async {
    try {
      final response = await http.get(Uri.parse(UPDATE_URL))
          .timeout(const Duration(seconds: 3));
      
      if (response.statusCode == 200) {
        final data = json.decode(response.body);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        if (data['version'] != CURRENT_VERSION) {
          print('üì¶ [Updates] –ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${data['version']} (—Ç–µ–∫—É—â–∞—è: $CURRENT_VERSION)');
          return data;
        } else {
          // –í–µ—Ä—Å–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
          return null;
        }
      } else {
        throw Exception('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥: ${response.statusCode}');
      }
    } catch (e) {
      // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ UI
      throw e;
    }
  }
  
  /// –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –æ–±–Ω–æ–≤–∏—Ç—å—Å—è
  static void _showUpdateDialog(BuildContext context, Map<String, dynamic> updateInfo) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Row(
          children: [
            Icon(Icons.system_update, color: Colors.blue),
            SizedBox(width: 10),
            Text('–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ'),
          ],
        ),
        content: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              '–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: ${updateInfo['version']}',
              style: const TextStyle(fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 8),
            Text(
              '–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $CURRENT_VERSION',
              style: const TextStyle(color: Colors.grey),
            ),
            const SizedBox(height: 12),
            Text(updateInfo['changelog'] ?? '–ù–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è'),
          ],
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('–ü–æ–∑–∂–µ'),
          ),
          ElevatedButton(
            onPressed: () {
              _downloadUpdate(updateInfo['download_url']);
              Navigator.pop(context);
            },
            child: const Text('–°–∫–∞—á–∞—Ç—å'),
          ),
        ],
      ),
    );
  }
  
  /// –°–∫–∞—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–æ—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
  static Future<void> _downloadUpdate(String url) async {
    try {
      print('üì• [Updates] –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: $url');
      if (await canLaunchUrl(Uri.parse(url))) {
        await launchUrl(Uri.parse(url), mode: LaunchMode.externalApplication);
      } else {
        print('‚ùå [Updates] –ù–µ —É–¥–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É: $url');
      }
    } catch (e) {
      print('‚ùå [Updates] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Å—ã–ª–∫–∏: $e');
    }
  }
  
  /// –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç"
  static void _showNoUpdatesDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Row(
          children: [
            Icon(Icons.check_circle, color: Colors.green),
            SizedBox(width: 10),
            Text('–û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç'),
          ],
        ),
        content: Text(
          '–£ –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $CURRENT_VERSION',
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('OK'),
          ),
        ],
      ),
    );
  }
  
  /// –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –æ—à–∏–±–∫–∏
  static void _showErrorDialog(BuildContext context, String error) {
    String userFriendlyMessage;
    
    if (error.contains('TimeoutException')) {
      userFriendlyMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.';
    } else if (error.contains('SocketException')) {
      userFriendlyMessage = '–°–µ—Ä–≤–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
    } else if (error.contains('FormatException')) {
      userFriendlyMessage = '–ü–æ–ª—É—á–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.';
    } else {
      userFriendlyMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
    }
    
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Row(
          children: [
            Icon(Icons.error, color: Colors.red),
            SizedBox(width: 10),
            Text('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏'),
          ],
        ),
        content: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(userFriendlyMessage),
            const SizedBox(height: 12),
            const Text(
              '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:',
              style: TextStyle(fontWeight: FontWeight.bold, fontSize: 12),
            ),
            const SizedBox(height: 4),
            Text(
              error,
              style: const TextStyle(fontSize: 10, color: Colors.grey),
            ),
          ],
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('OK'),
          ),
        ],
      ),
    );
  }
  
  /// –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  Future<void> downloadUpdate(String downloadUrl) async {
    try {
      print('üì± [UpdateService] –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: $downloadUrl');
      
      final uri = Uri.parse(downloadUrl);
      if (await canLaunchUrl(uri)) {
        await launchUrl(uri, mode: LaunchMode.externalApplication);
        print('‚úÖ [UpdateService] –°—Å—ã–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
      } else {
        print('‚ùå [UpdateService] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É: $downloadUrl');
        throw Exception('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è');
      }
    } catch (e) {
      print('‚ùå [UpdateService] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Å—ã–ª–∫–∏: $e');
      rethrow;
    }
  }
}

/// Widget –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ upgrader —Å App Store/Google Play
/// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ fallback –µ—Å–ª–∏ –≤–∞—à —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
class UpgraderWrapper extends StatelessWidget {
  final Widget child;
  
  const UpgraderWrapper({
    super.key,
    required this.child,
  });
  
  @override
  Widget build(BuildContext context) {
    if (!AppConfig.checkForUpdates) {
      return child; // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω–∞
    }
    
    return UpgradeAlert(
      child: child,
    );
  }
}
