import 'package:get_it/get_it.dart';
import '../../shared/either.dart';
import '../../shared/failures.dart';
import '../../features/authentication/domain/usecases/logout_usecase.dart';
import '../services/app_session_service.dart';

/// –û–±—ë—Ä—Ç–∫–∞ –Ω–∞–¥ authentication —Ñ–∏—á–µ–π –¥–ª—è logout —á–µ—Ä–µ–∑ AppUser
/// –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç logout –∫ LogoutUseCase –∏ –æ—á–∏—â–∞–µ—Ç AppSession
class AppUserLogoutService {
  final LogoutUseCase _logoutUseCase;

  AppUserLogoutService({
    LogoutUseCase? logoutUseCase,
  }) : _logoutUseCase = logoutUseCase ?? GetIt.instance<LogoutUseCase>();

  /// –ü–æ–ª–Ω—ã–π logout —Å –æ—á–∏—Å—Ç–∫–æ–π –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
  /// 1. –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç logout –∫ authentication —Ñ–∏—á–µ
  /// 2. –û—á–∏—â–∞–µ—Ç AppSession
  /// 3. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  Future<Either<AuthFailure, void>> logoutAppUser() async {
    print('üö™ [AppUserLogout] –ù–∞—á–∏–Ω–∞–µ–º logout...');

    try {
      // 1. –î–µ–ª–µ–≥–∏—Ä—É–µ–º logout –∫ authentication —Ñ–∏—á–µ
      final logoutResult = await _logoutUseCase.call();

      return logoutResult.fold(
        (authFailure) {
          print('‚ùå [AppUserLogout] –û—à–∏–±–∫–∞ logout: ${authFailure.message}');
          return Left(authFailure);
        },
        (_) async {
          print('‚úÖ [AppUserLogout] Authentication logout —É—Å–ø–µ—à–µ–Ω');

          // 2. –û—á–∏—â–∞–µ–º AppSession
          try {
            AppSessionService.clearSession();
            print('‚úÖ [AppUserLogout] AppSession –æ—á–∏—â–µ–Ω');
            
            print('üéØ [AppUserLogout] Logout –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            return const Right(null);
          } catch (e) {
            print('‚ùå [AppUserLogout] –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ AppSession: $e');
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö, —Ç–∞–∫ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π logout –ø—Ä–æ—à–µ–ª
            return const Right(null);
          }
        },
      );
    } catch (e) {
      print('‚ùå [AppUserLogout] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ logout: $e');
      return Left(AuthFailure('–û—à–∏–±–∫–∞ logout: $e'));
    }
  }
}
